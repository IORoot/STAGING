# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ staging ]
  pull_request:
    branches: [ staging ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  server: staging
  ssh:    'root@londonparkour.com:'
  dest:   '/var/www/vhosts/test/'
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
          
      # Checkout repo with submodules
      # https://github.com/marketplace/actions/checkout-submodules 
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          
      
      # https://dev.to/shofol/run-your-github-actions-jobs-from-a-specific-directory-1i9e
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x  

      # Install Theme Node Dependencies
      - name: Install dependencies
        run: |
          cd ./wp-content/themes/wp-theme__londonparkour--v4
          ls
          npm install
            
      # Install NPM Packages
      - name: NPM Install
        run: |
          find . ! -path "*/node_modules/*"  -name "package.json"  -execdir npm install \; -exec echo "--- npm install in " {} \;
    
                
      # Install Composer Packages in wp-plugin__ folders
      - name: Composer Install
        run: |
          find . -path "*/wp-plugin*"  ! -path "*/vendor/*" ! -path "*/node_modules/*"  -name "composer.json"  -execdir composer install \; -exec echo "--- composer install in " {} \; 


      # Deploy repo to staging server
      - name: Sync Repo to Server
        run: |
          echo "${{secrets.DEPLOY_KEY}}" > deploy_key
          chmod 600 ./deploy_key
          rsync -chav --delete \
            -e 'ssh -i ./deploy_key -o StrictHostKeyChecking=no' \
            --exclude /deploy_key \
            --exclude /.git/ \
            --exclude /.github/ \
            ./ ${{env.ssh}}:${{env.dest}}

        
      # Clone wordpress fresh install
      - name: Install Wordpress
        uses: JimCronqvist/action-ssh@master
        with:
          hosts: ${{env.ssh}}
          privateKey: ${{secrets.DEPLOY_KEY}}
          command: |
            cd ${{env.dest}}
            curl -O https://wordpress.org/latest.tar.gz
            tar --strip-components=1 -xzvf latest.tar.gz
            rm latest.tar.gz
            

      # Chown to www-data:www-data
      - name: Chown
        uses: JimCronqvist/action-ssh@master
        with:
          hosts: ${{env.ssh}}
          privateKey: ${{secrets.DEPLOY_KEY}}
          command: |
            chown -Rf www-data:www-data ${{env.dest}}


