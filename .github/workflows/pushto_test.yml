# Ubuntu-latest versions
# mysql  Ver 8.0.23-0ubuntu0.20.04.1 for Linux on x86_64 ((Ubuntu))
# PHP 8.0.3 (cli) (built: Mar  5 2021 07:54:13) ( NTS )

name: Testing

on:
  push:
    branches: [ test ]
  workflow_dispatch:


jobs:

  # Test Job
  # Taken from: https://github.com/PrestaShop/PrestaShop/blob/develop/.github/workflows/sanity-74.yml
  test:
    runs-on: ubuntu-18.04
    name: Testing Website Update
    strategy:
      matrix:
        php: [ '7.4' ]
      fail-fast: false



    steps:

      # Checkout repo with submodules
      # https://github.com/marketplace/actions/checkout-submodules 
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Apache
        run: sudo bash .github/workflows/setup/setup-apache.sh ${{ github.workspace }} ${{ matrix.php }}

          
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl, gd, xml, dom, json, fileinfo, curl, zip, iconv, simplexml

      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: '5.7'
          mysql database: 'staging_londonparkour_com'
          mysql root password: ${{secrets.MYSQL_PASSWORD}}
          mysql user: 'ldnpktesting'
          mysql password: ${{secrets.MYSQL_PASSWORD}}


      # Clone wordpress fresh install
      - name: Install Wordpress
        run: |
          curl -O https://wordpress.org/latest.tar.gz
          tar --strip-components=1 -xzvf latest.tar.gz
          rm latest.tar.gz


      # Unlock with git-crypt.
      - name: Unlock secrets
        uses: sliteteam/github-action-git-crypt-unlock@1.2.0
        env:
          GIT_CRYPT_KEY: ${{ secrets.GPG_SIGNING_KEY }}



      # Install Database once decrypted with git-crypt and GPG key.
      - name: Install Database
        run: |
          mysql -uldnpktesting -p${{secrets.MYSQL_PASSWORD}} -h localhost staging_londonparkour_com < ./wp-content/database/dev_londonparkour_com.sql


      # - name: Use Node.js 14.x
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: 14.x  

      # # https://github.com/sindresorhus/capture-website-cli
      # - name: Install capture-website-cli
      #   run: |
      #     npm install --global capture-website-cli 1> /dev/null
        

      # - name: Screenshot Website
      #   run: |
      #     capture-website ${{ env.url }} --output ${{ env.destination }} --full-page --type=jpeg --quality=0.5
      

      # - name: Upload screenshot
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: screenshot
      #     path: ${{ env.destination }}

